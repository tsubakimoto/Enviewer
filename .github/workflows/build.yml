name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  BUILD_CONFIGURATION: Release

jobs:
  push_to_nuget:
    runs-on: ubuntu-latest

    environment: nuget.org

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        id: setup
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - run: echo '${{ steps.setup.outputs.dotnet-version }}'

      - name: Cache nuget packages
        id: cache-nuget
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: List the state of nuget packages
        if: ${{ steps.cache-nuget.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: dotnet nuget locals all --list

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration ${{ env.BUILD_CONFIGURATION }}

      - name: Test
        run: dotnet test

      - name: Pack
        if: github.ref == 'refs/heads/main'
        run: dotnet pack src/Enviewer/Enviewer.csproj --no-build --output ${{ env.DOTNET_ROOT }}/enviewer --configuration ${{ env.BUILD_CONFIGURATION }}

      - name: Push
        if: github.ref == 'refs/heads/main'
        run: dotnet nuget push ${{ env.DOTNET_ROOT }}/enviewer/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
